{
  "id": 18,
  "title": "Middleware to Protect Routes",
  "description": "How to use middleware to require login before accessing certain routes.",
  "content": "Middleware is code that runs before your route handler. You can use it to check if a user is logged in and block access if not.",
  "code_snippets": {
    "flask": { "language": "python", "code": "@app.before_request\ndef require_login():\n    if not session.get('user_id') and request.endpoint == 'profile':\n        return redirect('/login')" },
    "express": { "language": "javascript", "code": "function requireLogin(req, res, next) {\n  if (!req.session.userId) {\n    return res.redirect('/login');\n  }\n  next();\n}\napp.use('/profile', requireLogin);" },
    "django": { "language": "python", "code": "from django.contrib.auth.decorators import login_required\n@login_required\ndef profile(request):\n    ..." }
  },
  "next": 19
}
